name: Compile Rust to all targets

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Compile to all targets
        run: |
          # Set the project name
          project_name="html-template-scraper"

          
          
          # Add all the supported targets
          rustup target add x86_64-unknown-linux-gnu
          rustup target add x86_64-apple-darwin
          rustup target add x86_64-pc-windows-gnu
          rustup target add x86_64-pc-windows-msvc

          # Build for all supported targets
          cargo build --release --target x86_64-unknown-linux-gnu
          
          cat << EOF >> ~/.cargo/config
[target.x86_64-apple-darwin]
rustflags = [
  "-C", "link-arg=-undefined",
  "-C", "link-arg=dynamic_lookup",
]

[target.aarch64-apple-darwin]
rustflags = [
  "-C", "link-arg=-undefined",
  "-C", "link-arg=dynamic_lookup",
]
EOF

          cargo build --release --target x86_64-apple-darwin
          cargo build --release --target x86_64-pc-windows-gnu
          cargo build --release --target x86_64-pc-windows-msvc

          # Create artifacts directory
          mkdir artifacts

          # Move compiled binaries to artifacts directory
          cp target/x86_64-unknown-linux-gnu/release/"$project_name" artifacts/"$project_name"-linux
          cp target/x86_64-apple-darwin/release/"$project_name" artifacts/"$project_name"-macos
          cp target/x86_64-pc-windows-gnu/release/"$project_name".exe artifacts/"$project_name"-windows-gnu.exe
          cp target/x86_64-pc-windows-msvc/release/"$project_name".exe artifacts/"$project_name"-windows-msvc.exe

      - name: Save artifacts
        uses: actions/upload-artifact@v2
        with:
          path: artifactes
